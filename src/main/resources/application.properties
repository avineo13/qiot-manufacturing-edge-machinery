quarkus.log.level=${LOGLEVEL\:INFO}
quarkus.log.console.color=true



quarkus.ssl.native=true

quarkus.native.enable-all-security-services=true

########## APP data ##########

#App data
qiot.folder.root=/var/data/qiot
qiot.folder.data=${qiot.folder.root}/data

qiot.datafile.path=${qiot.folder.data}/machinerydata.json

#Truststore
qiot.mqtts.ts.path=${qiot.folder.data}/mqtts/client.ts
qiot.mqtts.ts.password=${TRUSTSTOREPASSWORD\:123456}

#Keystore
qiot.mqtts.ks.path=${qiot.folder.data}/mqtts/client.ks
qiot.mqtts.ks.password=${KEYSTOREPASSWORD\:123456}

%dev.qiot.machinery.serial=testmachineryserial01
%dev.qiot.machinery.name=testmachineryname01
qiot.machinery.serial=${STATIONSERIAL\:empty}
qiot.machinery.name=${STATIONNAME}

########## APP data ##########

# Rest client configuration properties
# using "configKey" instead of interface fully qualified name
#registration-api/mp-rest/url=https://registration-service-qiotcovid19v2.apps.cluster-fcd8.fcd8.example.opentlc.com/
#registration-api/mp-rest/url=${REGISTRATION-SERVICE-URL\:https\://localhost:8443}
#registration-api/mp-rest/keyStore=${qiot.folder.root}/https/client.ks
#registration-api/mp-rest/keyStorePassword=123456
#registration-api/mp-rest/trustStore=${qiot.folder.root}/https/client.ts
#registration-api/mp-rest/trustStorePassword=123456
#registration-api/mp-rest/scope=javax.inject.Singleton
#%dev.registration-api/mp-rest/hostnameVerifier=io.quarkus.restclient.NoopHostnameVerifier
#%staging.registration-api/mp-rest/hostnameVerifier=io.quarkus.restclient.NoopHostnameVerifier


### MESSAGING

qiot.broker.username=qiotmanufacturing
qiot.broker.password=qiotmanufacturingpassword

qiot.production.chain.validation.queue-prefix=qiot.manufacturing.validation
qiot.production.chain.validation.replyto-queue-prefix=${qiot.production.chain.validation.queue-prefix}.replyto
qiot.production.chain.validation.weaving.queue=${qiot.production.chain.validation.queue-prefix}.weaving
qiot.production.chain.validation.coloring.queue=${qiot.production.chain.validation.queue-prefix}.coloring
qiot.production.chain.validation.printing.queue=${qiot.production.chain.validation.queue-prefix}.printing
qiot.production.chain.validation.packaging.queue=${qiot.production.chain.validation.queue-prefix}.packaging

## AMQP - Incoming - Production Model

# Configures the AMQP broker credentials.
#amqp-host=${AMQP-HOST:localhost}               
#amqp-port=${AMQP-PORT:localhost}   
#amqp-username=${AMQP-USERNAME:qiotmanufacturing}
#amqp-password=${AMQP-PASSWORD:qiotmanufacturingpassword}

# Configure the AMQP connector to read from the `prices` queue
#mp.messaging.incoming.productiontask.connector=smallrye-amqp
#mp.messaging.incoming.productiontask.durable=true
#mp.messaging.incoming.productiontask-in.address=productiontask
#mp.messaging.incoming.productiontask-in.container-id=productiontask
#mp.messaging.incoming.productiontask-in.link-name=productiontask

## MQTT - Outgoing - Production events

#mp.messaging.outgoing.productionevent.type=smallrye-mqtt
#mp.messaging.outgoing.productionevent.qos=2
#mp.messaging.outgoing.productionevent.auto-generated-client-id=true
#mp.messaging.outgoing.productionevent.ssl=false
#mp.messaging.outgoing.productionevent.host=${MQTT-URL\:localhost}
#mp.messaging.outgoing.productionevent.port=${MQTT-PORT\:1883}

## JMS - Production tasks and validation

quarkus.artemis.url=tcp://localhost:61616
quarkus.artemis.username=qiotmanufacturing
quarkus.artemis.password=qiotmanufacturingpassword









#### gas
#mp.messaging.outgoing.gas.type=smallrye-mqtt
#mp.messaging.outgoing.gas.qos=2
#mp.messaging.outgoing.gas.auto-generated-client-id=true
##mp.messaging.outgoing.gas.ssl=false
##mp.messaging.outgoing.gas.host=${MQTTURL\:localhost}
##mp.messaging.outgoing.gas.port=${MQTTPORT\:1883}
#
##%prod
#%prod.mp.messaging.outgoing.gas.host=${MQTTURL\:endpoint-service-mqtts-0-svc-rte-qiotcovid19v2.apps.cluster-fcd8.fcd8.example.opentlc.com}
#%prod.mp.messaging.outgoing.gas.port=${MQTTPORT\:443}
#%prod.mp.messaging.outgoing.gas.ssl=${ENABLESSL\:true}
#%prod.mp.messaging.outgoing.gas.trust-all=false
#%prod.mp.messaging.outgoing.gas.ssl.truststore.location=${qiot.mqtts.ts.path}
#%prod.mp.messaging.outgoing.gas.ssl.truststore.password=${qiot.mqtts.ts.password}
#%prod.mp.messaging.outgoing.gas.ssl.keystore.location=${qiot.mqtts.ks.path}
#%prod.mp.messaging.outgoing.gas.ssl.keystore.password=${qiot.mqtts.ks.password}
#
#
#### pollution
#mp.messaging.outgoing.pollution.type=smallrye-mqtt
#mp.messaging.outgoing.pollution.qos=2
#mp.messaging.outgoing.pollution.auto-generated-client-id=true
##mp.messaging.outgoing.pollution.ssl=false
##mp.messaging.outgoing.pollution.host=${MQTTURL\:localhost}
##mp.messaging.outgoing.pollution.port=${MQTTPORT\:1883}
#
##%prod
#%prod.mp.messaging.outgoing.pollution.host=${MQTTURL\:endpoint-service-mqtts-0-svc-rte-qiotcovid19v2.apps.cluster-fcd8.fcd8.example.opentlc.com}
#%prod.mp.messaging.outgoing.pollution.port=${MQTTPORT\:443}
#%prod.mp.messaging.outgoing.pollution.ssl=${ENABLESSL\:true}
#%prod.mp.messaging.outgoing.pollution.trust-all=false
#%prod.mp.messaging.outgoing.pollution.ssl.truststore.location=${qiot.mqtts.ts.path}
#%prod.mp.messaging.outgoing.pollution.ssl.truststore.password=${qiot.mqtts.ts.password}
#%prod.mp.messaging.outgoing.pollution.ssl.keystore.location=${qiot.mqtts.ks.path}
#%prod.mp.messaging.outgoing.pollution.ssl.keystore.password=${qiot.mqtts.ks.password}